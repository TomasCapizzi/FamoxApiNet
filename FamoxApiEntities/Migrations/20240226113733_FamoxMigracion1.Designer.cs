// <auto-generated />
using System;
using FamoxApiEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamoxApiEntities.Migrations
{
    [DbContext(typeof(FamoxApiContext))]
    [Migration("20240226113733_FamoxMigracion1")]
    partial class FamoxMigracion1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FamoxApiEntities.Accesorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AccesorioUS")
                        .HasColumnType("bit");

                    b.Property<bool>("Accesorio_")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gases")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accesorios");
                });

            modelBuilder.Entity("FamoxApiEntities.EquipoDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Anmat")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EquipoDigital_")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Modelos")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquiposDigitales");
                });

            modelBuilder.Entity("FamoxApiEntities.Gases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aire")
                        .HasColumnType("bit");

                    b.Property<bool>("Co2")
                        .HasColumnType("bit");

                    b.Property<bool>("Evac")
                        .HasColumnType("bit");

                    b.Property<bool>("Iaire")
                        .HasColumnType("bit");

                    b.Property<int?>("ModeloAccesorioId")
                        .HasColumnType("int");

                    b.Property<bool>("N2")
                        .HasColumnType("bit");

                    b.Property<bool>("N2o")
                        .HasColumnType("bit");

                    b.Property<bool>("O2")
                        .HasColumnType("bit");

                    b.Property<bool>("Vacio")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ModeloAccesorioId");

                    b.ToTable("Gases");
                });

            modelBuilder.Entity("FamoxApiEntities.Gasoterapia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Anmat")
                        .HasColumnType("bit");

                    b.Property<string>("Conectores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Conexion")
                        .HasColumnType("bit");

                    b.Property<bool>("Gas")
                        .HasColumnType("bit");

                    b.Property<string>("Gases_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gasoterapia_")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Modelos")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Rango")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gasoterapias");
                });

            modelBuilder.Entity("FamoxApiEntities.ModeloAccesorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccesorioId")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccesorioId");

                    b.ToTable("ModeloAccesorio");
                });

            modelBuilder.Entity("FamoxApiEntities.ModeloEquipoDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipoDigitalId")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modulos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipoDigitalId");

                    b.ToTable("ModeloEquipoDigital");
                });

            modelBuilder.Entity("FamoxApiEntities.ModeloGasoterapia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GasoterapiaId")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rango")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GasoterapiaId");

                    b.ToTable("ModeloGasoterapia");
                });

            modelBuilder.Entity("FamoxApiEntities.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fecha")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instalacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obra_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("FamoxApiEntities.Rango", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GasoterapiaId")
                        .HasColumnType("int");

                    b.Property<string>("Rango_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GasoterapiaId");

                    b.ToTable("Rango");
                });

            modelBuilder.Entity("FamoxApiEntities.UnidadDeSuministro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Anmat")
                        .HasColumnType("bit");

                    b.Property<string>("BajaTension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conectores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Conexion")
                        .HasColumnType("bit");

                    b.Property<bool>("Gas")
                        .HasColumnType("bit");

                    b.Property<string>("Gases")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gasoterapia")
                        .HasColumnType("bit");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Longitud")
                        .HasColumnType("bit");

                    b.Property<string>("Manual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaTension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Modelos")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Uso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnidadesDeSuministros");
                });

            modelBuilder.Entity("FamoxApiEntities.Gases", b =>
                {
                    b.HasOne("FamoxApiEntities.ModeloAccesorio", null)
                        .WithMany("Gas")
                        .HasForeignKey("ModeloAccesorioId");
                });

            modelBuilder.Entity("FamoxApiEntities.ModeloAccesorio", b =>
                {
                    b.HasOne("FamoxApiEntities.Accesorio", null)
                        .WithMany("Modelos")
                        .HasForeignKey("AccesorioId");
                });

            modelBuilder.Entity("FamoxApiEntities.ModeloEquipoDigital", b =>
                {
                    b.HasOne("FamoxApiEntities.EquipoDigital", null)
                        .WithMany("Modelos_")
                        .HasForeignKey("EquipoDigitalId");
                });

            modelBuilder.Entity("FamoxApiEntities.ModeloGasoterapia", b =>
                {
                    b.HasOne("FamoxApiEntities.Gasoterapia", null)
                        .WithMany("Modelos_")
                        .HasForeignKey("GasoterapiaId");
                });

            modelBuilder.Entity("FamoxApiEntities.Rango", b =>
                {
                    b.HasOne("FamoxApiEntities.Gasoterapia", null)
                        .WithMany("Rangos")
                        .HasForeignKey("GasoterapiaId");
                });

            modelBuilder.Entity("FamoxApiEntities.Accesorio", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("FamoxApiEntities.EquipoDigital", b =>
                {
                    b.Navigation("Modelos_");
                });

            modelBuilder.Entity("FamoxApiEntities.Gasoterapia", b =>
                {
                    b.Navigation("Modelos_");

                    b.Navigation("Rangos");
                });

            modelBuilder.Entity("FamoxApiEntities.ModeloAccesorio", b =>
                {
                    b.Navigation("Gas");
                });
#pragma warning restore 612, 618
        }
    }
}
